{"version":3,"sources":["components/Nav.module.css","components/Cards.module.css","components/SearchBar.module.css","components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","components/Nav.jsx","components/About.jsx","components/Ciudad.jsx","containers/App.js","index.js","components/Card.module.css"],"names":["module","exports","Card","props","className","s","container","to","id","cityName","name","min","max","src","img","alt","onClick","onClose","boton","Cards","cities","ss","map","city","index","key","SearchBar","onSearch","useState","setCity","SB","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Nav","navctn","icon","About","Ciudad","temp","weather","wind","clouds","latitud","longitud","App","setCities","ciudad","fetch","then","r","json","recurso","undefined","main","Math","round","temp_min","temp_max","speed","all","coord","lat","lon","oldCities","alert","filter","c","onFilter","ciudadId","parseInt","length","path","render","component","exact","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.078db888.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navctn\":\"Nav_navctn__3dNv1\",\"icon\":\"Nav_icon__3GmsL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cards\":\"Cards_Cards__kzq70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SB\":\"SearchBar_SB__2uk44\"};","import React from 'react';\nimport s from './Card.module.css'\nimport {Link} from 'react-router-dom'\n\n// max, min, name, img, onClose\nfunction Card(props) {\n   \n  return (\n      \n    <div className = {s.container}>\n\n      <Link to= {`/ciudad/${props.id}`}>\n        <div className = {s.cityName}>{props.name}</div>\n      </Link>\n    <div className={s.min}>\n    <p>Min</p>\n    <p>{props.min + '째C'}</p>\n    </div>\n\n    <div className={s.max}>\n    <p>Max</p>\n    <p>{props.max + '째C'}</p>\n    </div>\n\n    <div><img src={`http://openweathermap.org/img/wn/${props.img}@2x.png`} alt='weather_img'/></div>\n\n   \n    <button onClick={props.onClose} className={s.boton}>X</button>\n\n    </div>\n  )\n};\n\nexport default Card","import React from 'react';\nimport Card from './Card.jsx';\nimport ss from './Cards.module.css'\n\nfunction Cards({cities, onClose}) {\n  \n    if (cities){\n      return (\n  \n    \n    <div className = {ss.Cards}>\n\n      {cities.map((city,index )=> \n        <Card\n        max= {city.max}       //Por que no es city.main.temp_max???\n        min={city.min}\n        name={city.name}\n        img={city.img}\n        onClose={() => onClose(city.id)}\n        key={index}   // se define un id unico para saber que Card es (ver video)\n        id = {city.id}\n        />\n      )\n      }\n   \n  \n    </div>\n    )\n  } else {\n     return ( <div>Sin Ciudades</div>)\n   } \n}\n  \n    \n  \n\n\nexport default Cards;","import React, { useState } from 'react';\nimport s from './SearchBar.module.css'\n\nexport default function SearchBar({onSearch}) {\n    \n    const [city,setCity]=useState('');\n\n  return (\n    <div className={s.SB}>\n          \n    <form onSubmit={(e) => {\n      e.preventDefault();\n      \n      onSearch(city);\n      setCity('')       // para que al clickear 'Agregar' no siga figurando el nombre\n      \n    }}>\n      <input\n        type=\"text\"\n        placeholder=\"Ciudad...\"\n        value = {city}\n        onChange={e=>setCity(e.target.value)}\n        \n      />\n      <input type=\"submit\" value=\"Agregar\" />\n    </form>\n  \n\n      {/* <button onClick={()=>props.onSearch('Buscando...')} className={\"btn btn-outline-success\"}>Agregar</button>   */}\n      {/* hago ufncion arrow porque sino aparece la alerta apenas carga la pagina */}\n    </div>\n  )\n\n  \n    \n};","import React from 'react'\r\nimport SearchBar from './SearchBar'\r\nimport s from './Nav.module.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Nav({onSearch}){\r\n    \r\n    return (\r\n\r\n\r\n        <div className = {s.navctn}>\r\n            <Link to='/'>\r\n                <span>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/3767/3767036.png\" alt=\"icon\" className={s.icon}/>\r\n            Weather APP\r\n            </span>\r\n            </Link>\r\n            \r\n                        \r\n            <Link to='/about'>\r\n                <span>About</span>\r\n            </Link>\r\n\r\n            <SearchBar onSearch={onSearch}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav","import {React} from 'react'\r\n\r\n\r\nfunction About (){\r\n    return (\r\n\r\n        <h1>About this APP</h1>\r\n    )\r\n}\r\n\r\nexport default About","import React from \"react\";\r\n\r\nfunction Ciudad ({city}){\r\n    return(\r\n        <div className='ciudad'>\r\n            <div className='container'>\r\n                <h2>{city.name}</h2>\r\n                <div>Temperatura: {city.temp} 째C</div>\r\n                <div>Clima: {city.weather}</div>\r\n                <div>Viento: {city.wind} km/h</div>\r\n                <div>Cantidad de nubes: {city.clouds}</div>\r\n                <div>Latitud: {city.latitud}째</div>\r\n                <div>Longitud: {city.longitud}!</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ciudad","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"../components/Cards\";\nimport Nav from \"../components/Nav\";\n// import \"./global.css\";\nimport { Route } from \"react-router-dom\";\nimport About from \"../components/About\";\nimport Ciudad from \"../components/Ciudad\";\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n\n  function onSearch(ciudad) {\n    const apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\n\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\n    )\n      .then((r) => r.json())\n      .then((recurso) => {\n        if (recurso.main !== undefined) {\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon,\n          };\n          setCities((oldCities) => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n    // .catch( err => console.log('Error al cargar los datos'))    //Control de error por si no anda el fetch (Promise)\n  }\n\n  function onClose(id) {\n    setCities((oldCities) => oldCities.filter((c) => c.id != id));\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter((c) => c.id == parseInt(ciudadId));\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div>\n        <Route path=\"/\" render={() => <Nav onSearch={onSearch} />} />\n      </div>\n      <div>\n        <Route path=\"/about\" component={About} />\n      </div>\n      <hr />\n      <div>\n        <Route\n          path=\"/cards\"\n          render={() => <Cards cities={cities} onClose={onClose} />}\n        />\n\n        <Route\n          exact\n          path=\"/ciudad/:ciudadId\"\n          render={({ match }) => (\n            <Ciudad city={onFilter(match.params.ciudadId)} />\n          )}\n        />\n      </div>\n      <hr />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport { BrowserRouter as Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <Route>\n    <App />\n  </Route>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__2d0ZG\",\"boton\":\"Card_boton__2nVRs\",\"cityName\":\"Card_cityName__2c2gL\",\"min\":\"Card_min__2j1KC\",\"max\":\"Card_max__3C8JJ\"};"],"sourceRoot":""}