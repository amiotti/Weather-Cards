{"version":3,"sources":["components/About.module.css","components/Ciudad.module.css","components/Cards.module.css","components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","components/Nav.jsx","components/About.jsx","components/Ciudad.jsx","containers/App.js","index.js","components/Nav.module.css","components/Card.module.css"],"names":["module","exports","Card","props","className","s","container","to","id","cityName","name","min","max","src","img","alt","onClick","onClose","boton","Cards","cities","ss","map","city","index","key","SearchBar","onSearch","useState","setCity","SB","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Nav","navctn","text","icon","About","S","content","Ciudad","ciudad","temp","weather","wind","clouds","latitud","longitud","App","setCities","fetch","then","r","json","recurso","undefined","main","Math","round","temp_min","temp_max","speed","all","coord","lat","lon","oldCities","alert","filter","c","onFilter","ciudadId","parseInt","length","path","render","component","exact","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8531d910.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"About_container__3DNL4\",\"content\":\"About_content__1n9_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Ciudad_container__1NfuC\",\"ciudad\":\"Ciudad_ciudad__2hqHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cards\":\"Cards_Cards__32JTy\"};","import React from 'react';\nimport s from './Card.module.css'\nimport {Link} from 'react-router-dom'\n\n// max, min, name, img, onClose\nfunction Card(props) {\n   \n  return (\n      \n    <div className = {s.container}>\n\n      <Link to= {`/ciudad/${props.id}`}>\n        <div className = {s.cityName}>{props.name}</div>\n      </Link>\n    <div className={s.min}>\n    <p>Min</p>\n    <p>{props.min + '°C'}</p>\n    </div>\n\n    <div className={s.max}>\n    <p>Max</p>\n    <p>{props.max + '°C'}</p>\n    </div>\n\n    <div><img src={`http://openweathermap.org/img/wn/${props.img}@2x.png`} alt='weather_img'/></div>\n\n   \n    <button onClick={props.onClose} className={s.boton}>X</button>\n\n    </div>\n  )\n};\n\nexport default Card","import React from 'react';\nimport Card from './Card.jsx';\nimport ss from './Cards.module.css'\n\nfunction Cards({cities, onClose}) {\n  \n    if (cities){\n      return (\n  \n    \n    <div className = {ss.Cards}>\n\n      {cities.map((city,index )=> \n        <Card\n        max= {city.max}       //Por que no es city.main.temp_max???\n        min={city.min}\n        name={city.name}\n        img={city.img}\n        onClose={() => onClose(city.id)}\n        key={index}   // se define un id unico para saber que Card es (ver video)\n        id = {city.id}\n        />\n      )\n      }\n   \n  \n    </div>\n    )\n  } else {\n     return ( <div>Sin Ciudades</div>)\n   } \n}\n  \n    \n  \n\n\nexport default Cards;","import React, { useState } from 'react';\nimport s from './Nav.module.css'\n\nexport default function SearchBar({onSearch}) {\n    \n    const [city,setCity]=useState('');\n\n  return (\n    <div className={s.SB}>\n          \n    <form onSubmit={(e) => {\n      e.preventDefault();\n      \n      onSearch(city);\n      setCity('')       // para que al clickear 'Agregar' no siga figurando el nombre\n      \n    }}>\n      <input\n        type=\"text\"\n        placeholder=\"Ciudad...\"\n        value = {city}\n        onChange={e=>setCity(e.target.value)}\n        \n      />\n      <input type=\"submit\" value=\"Agregar\" className=\"btn btn-primary\"/>\n    </form>\n  \n\n      {/* <button onClick={()=>props.onSearch('Buscando...')} className={\"btn btn-outline-success\"}>Agregar</button>   */}\n      {/* hago ufncion arrow porque sino aparece la alerta apenas carga la pagina */}\n    </div>\n  )\n\n  \n    \n};","import React from 'react'\r\nimport SearchBar from './SearchBar'\r\nimport s from './Nav.module.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Nav({onSearch}){\r\n    \r\n    return (\r\n\r\n\r\n        <div className = {s.navctn}>\r\n        <Link to='/'>\r\n         <span className = {s.text}>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/3767/3767036.png\" alt=\"icon\" className={s.icon}/>\r\n            Weather APP\r\n         </span>\r\n        </Link>\r\n            \r\n                        \r\n            <Link to='/about'>\r\n                <span className={s.text}>About</span>\r\n            </Link>\r\n\r\n            <SearchBar onSearch={onSearch} className={s.SB}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react'\r\nimport S from './About.module.css'\r\n\r\n\r\nfunction About (){\r\n    return (\r\n        <div className={S.container}>\r\n            <div className={S.content}>   \r\n            <div>About this Weather APP</div>\r\n            <p>This App is my first project. It´s a SPA gets data from an API and display a Weather card according the search made.</p>\r\n            <ul>\r\n            I´ve used:\r\n            <li>CSS</li>\r\n            <li>React</li>\r\n            <li>Routing</li>\r\n            <li>Javascript</li>\r\n            </ul>\r\n            <footer>Made in Argentina with love</footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from \"react\";\r\nimport S from './Ciudad.module.css'\r\n\r\nfunction Ciudad ({city}){\r\n    return(\r\n        <div className={S.container}>\r\n            <div className={S.ciudad}>\r\n                <h2>{city.name}</h2>\r\n                <div>Temperatura: {city.temp} °C</div>\r\n                <div>Clima: {city.weather}</div>\r\n                <div>Viento: {city.wind} km/h</div>\r\n                <div>Cantidad de nubes: {city.clouds}</div>\r\n                <div>Latitud: {city.latitud}°</div>\r\n                <div>Longitud: {city.longitud}°</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ciudad","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"../components/Cards\";\nimport Nav from \"../components/Nav\";\n// import \"./global.css\";\nimport { Route } from \"react-router-dom\";\nimport About from \"../components/About\";\nimport Ciudad from \"../components/Ciudad\";\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n\n  function onSearch(ciudad) {\n    const apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\n\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\n    )\n      .then((r) => r.json())\n      .then((recurso) => {\n        if (recurso.main !== undefined) {\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon,\n          };\n          setCities((oldCities) => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n    // .catch( err => console.log('Error al cargar los datos'))    //Control de error por si no anda el fetch (Promise)\n  }\n\n  function onClose(id) {\n    setCities((oldCities) => oldCities.filter((c) => c.id != id));\n  }\n\n  //onFilter filters the city that has same id to de url\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter((c) => c.id == parseInt(ciudadId));\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div>\n        <Route path=\"/\" render={() => <Nav onSearch={onSearch} />} />\n      </div>\n      <div>\n        <Route path=\"/about\" component={About} />\n      </div>\n      <hr />\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Cards cities={cities} onClose={onClose} />}\n        />\n\n        <Route\n          exact\n          path=\"/ciudad/:ciudadId\"\n          render={({ match }) => (\n            <Ciudad city={onFilter(match.params.ciudadId)} />\n          )}\n        />\n      </div>\n      <hr />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport { BrowserRouter as Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <Route>\n    <App />\n  </Route>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navctn\":\"Nav_navctn__2i01O\",\"text\":\"Nav_text__3dcGX\",\"icon\":\"Nav_icon__3ATD5\",\"SB\":\"Nav_SB__sdQEy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__hedmA\",\"boton\":\"Card_boton__zZBps\",\"cityName\":\"Card_cityName__37OF4\",\"min\":\"Card_min__jK6Cx\",\"max\":\"Card_max__1pwYf\"};"],"sourceRoot":""}